<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on JohnDev</title>
    <link>http://johndev.onrender.com/posts/</link>
    <description>Recent content in Posts on JohnDev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Apr 2023 16:56:59 +1300</lastBuildDate>
    
	<atom:link href="http://johndev.onrender.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hands On Arcitecture</title>
      <link>http://johndev.onrender.com/posts/hands_on_architecture/</link>
      <pubDate>Thu, 06 Apr 2023 16:56:59 +1300</pubDate>
      
      <guid>http://johndev.onrender.com/posts/hands_on_architecture/</guid>
      <description>Hands on Architecture Role Of the Architect  Define a blueprint  Requirements Clarification  Top level functional and non functional requirements (system qualities)  True North  Engineering Principles for the system High level design (Decomposition of system into components) Quality Attributes Product Velocity (cicd) a/b testing - every feature has a flag  Technology Selection Leadership (Steering and asking tough questions at design meetings)
Coaching and Mentoring Developers  Outside of their normal deliverables  Target State vs Current State  mvp next bite sized chunks after that  Software Architecture vs Design  High Level Structure Low Level Implementatiion Details  What does Architecture look like?</description>
    </item>
    
    <item>
      <title>Data Structures And Algorithms Book</title>
      <link>http://johndev.onrender.com/posts/data_structures_algorithms/</link>
      <pubDate>Tue, 18 Oct 2022 16:56:59 +1300</pubDate>
      
      <guid>http://johndev.onrender.com/posts/data_structures_algorithms/</guid>
      <description>Classification of data structures and design patterns data structure - organization of data in a computers memory
Datatypes within a data structure
(Heterogenous)
 Linked List. Ordered List. Unordered List.  (Homogenous) Two dimensional arrays, multidimensional arrays
(Dynamic)
 dictionaries tree sets sequences  Linear Data Structures
 lists  package main import( &amp;quot;fmt&amp;quot; &amp;quot;container/list&amp;quot; ) func main(){ var inList list.list intList.pushBack(11) intList.pushBack(23) intList.pushBack(34) for element := intList.Front(); element != nil; element = element.</description>
    </item>
    
  </channel>
</rss>